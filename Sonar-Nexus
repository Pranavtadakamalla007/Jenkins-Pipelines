pipeline{
    agent any
    stages{
        stage('checkout'){
            steps{
                git branch: 'main', url: 'https://github.com/adigopulabharath/vprofile-project.git'
            }
        }
        stage('build'){
            steps{
                sh 'mvn clean install -DskipTests'
            }
            post{
                success{
                    echo 'archiving'
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
        }
        stage('test'){
            steps{
                sh 'mvn test'
            }
        }
        stage('checkstyle'){
            steps{
                sh ' mvn checkstyle:checkstyle'
            }
        }
        stage('sonar analysis'){
            environment{
                sonarscannerhome = tool 'SonarScannerV6'
            }
            steps{
                withSonarQubeEnv('SonarQube'){
                    sh '''${sonarscannerhome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
                }
            }
        }
        stage('Quality gate'){
            steps{
                timeout(time:1,unit:'HOURS'){
                    waitForQualityGate abortPipeline:true
                }
            }
        }
        stage('Upload artifact'){
            steps{
                nexusArtifactUploader(
        nexusVersion: 'nexus3',
        protocol: 'http',
        nexusUrl: '100.25.158.196:8081',
        groupId: 'none',
        version: '1.0',
        repository: 'vprofile',
        credentialsId: 'nexus',
        artifacts: [
            [artifactId: 'v-profile',
             classifier: '',
             file: 'target/vprofile-v2.war',
             type: 'war']
        ]
     )  
            }
        }
    }
}
